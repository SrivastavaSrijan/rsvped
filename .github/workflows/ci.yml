name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: "Lint & Type-Check"
    runs-on: ubuntu-latest
    env:
      SECRET_COOKIE_PASSWORD: "9bd49650a8dd6757e5ecf629ca7774c3d538eb254f3aee1744093ef40026377d"
      NEXTAUTH_SECRET: "3b7a71efe1e38a0805a7f4fa098a6675f8b4399521f764a590d7e197ca0cf9db"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run Biome Linter
        run: yarn lint:check

      - name: Type check
        run: yarn tsc --noEmit

  test-migrations:
    name: "Test Database Migrations"
    runs-on: ubuntu-latest
    env:
      SECRET_COOKIE_PASSWORD: "9bd49650a8dd6757e5ecf629ca7774c3d538eb254f3aee1744093ef40026377d"
      NEXTAUTH_SECRET: "3b7a71efe1e38a0805a7f4fa098a6675f8b4399521f764a590d7e197ca0cf9db"
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Test migrations
        env:
          DATABASE_URL: postgresql://postgres:password@localhost:5432/test_db
        run: |
          yarn prisma migrate deploy
          yarn prisma generate

  build:
    name: "Build Application"
    runs-on: ubuntu-latest
    needs: [lint, test-migrations]
    env:
      NEXTAUTH_SECRET: "3b7a71efe1e38a0805a7f4fa098a6675f8b4399521f764a590d7e197ca0cf9db"
      DATABASE_URL: postgresql://postgres:password@localhost:5432/test_db
      SECRET_COOKIE_PASSWORD: "9bd49650a8dd6757e5ecf629ca7774c3d538eb254f3aee1744093ef40026377d"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s*') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Generate Prisma Client
        run: yarn prisma generate

      - name: Build Next.js App
        run: yarn build
